// ูุซุงู ุนูู ุงุณุชุฎุฏุงู ุฎุฏูุฉ Gofile.io
import React, { useState } from 'react';
import {
  Container,
  Typography,
  Box,
  Button,
  Alert,
  Paper,
  Grid,
  Divider,
} from '@mui/material';
import { CloudUpload, TestTube, Folder } from '@mui/icons-material';
import GofileUploader from '../components/GofileUploader';
import {
  uploadFileToGofile,
  testConnection,
  createFolder,
  displayDownloadLink,
} from '../utils/gofileService';

const GofileExample = () => {
  const [testResult, setTestResult] = useState('');
  const [folderResult, setFolderResult] = useState('');
  const [loading, setLoading] = useState(false);

  // ุงุฎุชุจุงุฑ ุงูุงุชุตุงู
  const handleTestConnection = async () => {
    setLoading(true);
    setTestResult('ุฌุงุฑู ุงุฎุชุจุงุฑ ุงูุงุชุตุงู...');

    try {
      const result = await testConnection();
      if (result.success) {
        setTestResult(
          `โ ${result.message}\n๐ง ุงูุจุฑูุฏ ุงูุฅููุชุฑููู: ${result.data.email}\n๐ท๏ธ ููุน ุงูุญุณุงุจ: ${result.data.tier}`
        );
      } else {
        setTestResult(`โ ${result.error}`);
      }
    } catch (error) {
      setTestResult(`โ ุฎุทุฃ: ${error.message}`);
    } finally {
      setLoading(false);
    }
  };

  // ุฅูุดุงุก ูุฌูุฏ ุชุฌุฑูุจู
  const handleCreateFolder = async () => {
    setLoading(true);
    setFolderResult('ุฌุงุฑู ุฅูุดุงุก ุงููุฌูุฏ...');

    try {
      const folderName = `Test_Folder_${Date.now()}`;
      const result = await createFolder(folderName);

      if (result.success) {
        setFolderResult(
          `โ ${result.message}\n๐ ุงุณู ุงููุฌูุฏ: ${result.data.folderName}\n๐ ูุนุฑู ุงููุฌูุฏ: ${result.data.folderId}`
        );
      } else {
        setFolderResult(`โ ${result.error}`);
      }
    } catch (error) {
      setFolderResult(`โ ุฎุทุฃ: ${error.message}`);
    } finally {
      setLoading(false);
    }
  };

  // ูุนุงูุฌ ุงูุชูุงู ุงูุฑูุน
  const handleUploadComplete = result => {
    console.log('ุชู ุงูุฑูุน ุจูุฌุงุญ:', result);

    if (result.success) {
      // ูููู ุฅุถุงูุฉ ููุทู ุฅุถุงูู ููุง
      alert(displayDownloadLink(result));
    }
  };

  return (
    <Container maxWidth="lg" sx={{ py: 4 }}>
      <Typography variant="h4" gutterBottom align="center">
        ูุซุงู ุนูู ุงุณุชุฎุฏุงู Gofile.io API ๐
      </Typography>

      <Typography
        variant="body1"
        color="text.secondary"
        align="center"
        sx={{ mb: 4 }}
      >
        ูุฐุง ุงููุซุงู ููุถุญ ููููุฉ ุงุณุชุฎุฏุงู ุงูู API ุงูุฌุฏูุฏ ูู Gofile.io ูุน React ู
        Axios
      </Typography>

      <Grid container spacing={3}>
        {/* ุงุฎุชุจุงุฑ ุงูุงุชุตุงู */}
        <Grid item xs={12} md={6}>
          <Paper elevation={2} sx={{ p: 3, height: '100%' }}>
            <Typography variant="h6" gutterBottom>
              <TestTube sx={{ mr: 1, verticalAlign: 'middle' }} />
              ุงุฎุชุจุงุฑ ุงูุงุชุตุงู
            </Typography>

            <Typography variant="body2" color="text.secondary" sx={{ mb: 2 }}>
              ุงุฎุชุจุฑ ุงูุงุชุตุงู ูุน Gofile.io ูุงูุชุญูู ูู ุตุญุฉ ุงููุตุงุฏูุฉ
            </Typography>

            <Button
              variant="contained"
              onClick={handleTestConnection}
              disabled={loading}
              fullWidth
              sx={{ mb: 2 }}
            >
              ุงุฎุชุจุงุฑ ุงูุงุชุตุงู
            </Button>

            {testResult && (
              <Alert
                severity={testResult.includes('โ') ? 'success' : 'error'}
                sx={{ whiteSpace: 'pre-line' }}
              >
                {testResult}
              </Alert>
            )}
          </Paper>
        </Grid>

        {/* ุฅูุดุงุก ูุฌูุฏ */}
        <Grid item xs={12} md={6}>
          <Paper elevation={2} sx={{ p: 3, height: '100%' }}>
            <Typography variant="h6" gutterBottom>
              <Folder sx={{ mr: 1, verticalAlign: 'middle' }} />
              ุฅูุดุงุก ูุฌูุฏ
            </Typography>

            <Typography variant="body2" color="text.secondary" sx={{ mb: 2 }}>
              ุฅูุดุงุก ูุฌูุฏ ุฌุฏูุฏ ูู ุญุณุงุจู ุนูู Gofile.io
            </Typography>

            <Button
              variant="contained"
              color="secondary"
              onClick={handleCreateFolder}
              disabled={loading}
              fullWidth
              sx={{ mb: 2 }}
            >
              ุฅูุดุงุก ูุฌูุฏ ุชุฌุฑูุจู
            </Button>

            {folderResult && (
              <Alert
                severity={folderResult.includes('โ') ? 'success' : 'error'}
                sx={{ whiteSpace: 'pre-line' }}
              >
                {folderResult}
              </Alert>
            )}
          </Paper>
        </Grid>

        {/* ุฑูุน ููู ูุงุญุฏ */}
        <Grid item xs={12} md={6}>
          <Typography variant="h6" gutterBottom>
            <CloudUpload sx={{ mr: 1, verticalAlign: 'middle' }} />
            ุฑูุน ููู ูุงุญุฏ
          </Typography>
          <GofileUploader
            multiple={false}
            onUploadComplete={handleUploadComplete}
          />
        </Grid>

        {/* ุฑูุน ุนุฏุฉ ูููุงุช */}
        <Grid item xs={12} md={6}>
          <Typography variant="h6" gutterBottom>
            <CloudUpload sx={{ mr: 1, verticalAlign: 'middle' }} />
            ุฑูุน ุนุฏุฉ ูููุงุช
          </Typography>
          <GofileUploader
            multiple={true}
            maxFiles={5}
            onUploadComplete={handleUploadComplete}
          />
        </Grid>
      </Grid>

      <Divider sx={{ my: 4 }} />

      {/* ูุนูููุงุช ุฅุถุงููุฉ */}
      <Paper elevation={1} sx={{ p: 3, bgcolor: 'grey.50' }}>
        <Typography variant="h6" gutterBottom>
          ๐ ูุนูููุงุช ูููุฉ
        </Typography>

        <Box component="ul" sx={{ pl: 2 }}>
          <li>
            <Typography variant="body2">
              <strong>ุงูุญุฏ ุงูุฃูุตู ูุญุฌู ุงูููู:</strong> 30 ููุฌุงุจุงูุช
            </Typography>
          </li>
          <li>
            <Typography variant="body2">
              <strong>ุงูู API ุงููุณุชุฎุฏู:</strong>{' '}
              https://upload.gofile.io/uploadfile (ุงูุฌุฏูุฏ)
            </Typography>
          </li>
          <li>
            <Typography variant="body2">
              <strong>ุงููุตุงุฏูุฉ:</strong> Bearer Token ูู ุงูู Authorization
              header
            </Typography>
          </li>
          <li>
            <Typography variant="body2">
              <strong>ููุน ุงูุจูุงูุงุช:</strong> multipart/form-data ูุน ุญูู "file"
            </Typography>
          </li>
          <li>
            <Typography variant="body2">
              <strong>ุงูููุชุจุฉ ุงููุณุชุฎุฏูุฉ:</strong> Axios ููุทูุจุงุช HTTP
            </Typography>
          </li>
        </Box>
      </Paper>
    </Container>
  );
};

export default GofileExample;
