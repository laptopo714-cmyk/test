rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Access Codes - Strict rules
    match /accessCodes/{codeId} {
      allow read: if request.auth != null && request.auth.token.admin == true;
      allow write: if false; // Admin only through backend functions
    }

    // Notifications - Optimized reading
    match /notifications/{notificationId} {
      allow read: if 
        // Only fetch necessary fields
        request.query.limitToLast(20) && 
        request.query.select(['title', 'message', 'createdAt', 'priority']);
      
      allow write: if request.auth != null && request.auth.token.admin == true;
    }

    // Videos - Optimized for reads
    match /videos/{videoId} {
      allow read: if true;
      allow update: if 
        // Only allow specific fields to be updated
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['viewCount', 'watchHistory']);
    }

    // Video watch history - New optimized collection
    match /videoViews/{viewId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && request.auth.token.admin == true;
    }
  }
}